str.title() 单词首字母大写
str.upper() 大写
str.lower() 小写
制表符\t   换行符\n
print("Languages:\n\tPython\n\tC\n\tJavaScript")
str.rstrip([chars]) 删除 string 字符串尾的指定字符（默认为空格）.
str.lstrip([chars]) 删除 string 字符串首的指定字符（默认为空格）.
str.strip([chars])  删除 string 字符串首尾的指定字符（默认为空格）.
(2.0-1.1)= 0.8999999999999999
0.3*3=0.8999999999999999   ------------http://0.30000000000000004.com/
import this

[]列表：  type 'list'
         append()  insert()   del hello[0]     pop() 可删除列表末尾的元素，并让你能够接着使用它hel=hello.pop()
         remove('123')    sort()字母顺序  sort(reverse=True)反序  sorted()临时排序
         reverse()反转排序     len()      [x:y]   [:]复制列表
 range(x,y) x<=?<y
 list(range(1,6))   type()
 两个星号（** ）表示乘方运算   %	取模-返回除法的余数    //	取整除 - 返回商的整数部分   +=
 数字列表min() max() sum()

()元组： type 'tuple' 不能修改元组的元素，但可以给存储元组的变量赋值            sorted()

if:  and,or,in,not in    if-elif-else

{}字典：  type 'dict'  字典 是一系列键—值对 alien_0 = {'color': 'green', 'points': 5}可将任何Python对象用作字典中的值
        print(alien_0['color'])
        alien_0['x_position'] = 0
        alien_0['y_position'] = 25
        print(alien_0)
        del alien_0['points']
        for key,value in dict.items():
            print key+':'+value
        for key in dict.keys()://keys()返回一个列表，其中包含字典中的所有键== for key in dict(默认遍历所有的键)
            print key
        for key in sorted(dict.keys()):
        for value in dict.values()://values()返回一个值列表，而不包含任何键
        for value in set(dict.values()):set()集合 类似于列表,但每个元素都必须是独一无二的：去重

python2.x中只用raw_input();        python3.x中用户输入使用input()     --raw_input和input都默认接收的是字符

while True ......break......continue

for 循环是一种遍历列表的有效方式，但在for 循环中不应修改列表，否则将导致Python难以跟踪其中的元素。要在遍历列表的同时对其进行修改，可使用while 循环。

pets = ['dog', 'cat', 'dog', 'goldfish', 'cat', 'rabbit', 'cat']
while 'cat' in pets:
    pets.remove('cat')
print(pets)

def 函数:形参使用默认值时，在形参列表中必须先列出没有默认值的形参，再列出有默认值的实参。这让Python依然能够正确地解读位置实参。

test=''     if test:    Python将空字符串解读为False,非空字符串解读为True

要将列表的副本传递给函数，可以像下面这样做：
function_name(list_name[:])
切片表示法[:] 创建列表的副本。

def make_pizza(dog,*toppings):  形参*创建空元祖，可传递任意数量的实参
"""打印顾客点的所有配料"""
    print(toppings)
make_pizza('pepperoni')
make_pizza('mushrooms', 'green peppers', 'extra cheese')

def build_profile(first, last, **user_info):  形参**,创建一个空字典,接受任意数量的键—值对;

模块 是扩展名为.py的文件
import  module_name， module_name.function_name()
from module_name import function_name，这样调用无需使用句点 function_name()
使用as 给函数、模块指定别名 from module_name import function_name as fn,import module_name as mn
使用星号（* ）运算符可让Python导入模块中的所有函数：from module_name import *

给形参指定默认值时，等号两边不要有空格：
def function_name(parameter_0, parameter_1='default value')
对于函数调用中的关键字实参，也应遵循这种约定：
function_name(value_0, parameter_1='value')

建议代码行的长度不要超过79字符

根据类来创建对象被称为实例化,根据约定，在Python中，首字母大写的名称指的是类
方法__init__(),类中的函数称为方法,初始化属性def __init__(self, name, age):self.name = name;self.age = age

在Python 2.7中创建类时，需要做细微的修改——在括号内包含单词object ：class ClassName(object):



